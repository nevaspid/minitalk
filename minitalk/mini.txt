TuTo MiNiTalK :

en gros minitalk c un server et un client

server :

on lance le server il nous donne un pid qui sert au client pour envoyer au bon endroit.

pid c une variable de type pid_t 

elle sera egale a getpid().

on doit print le pid et attendre le client

client :

le client lui avec le on doit d'abord convertir le pid qu'on a en int ( atoi sur argv[1] tu connais )

et du coup on fait une boucle while de argv[2][i] qui envoie chaque charactere de argv[2][i], la fonction dans la boucle prend le
charactere et le pid nouvellement converti

la fonction va faire en sorte d'envoyer un signal des qu'un des bit du char est un 1 

pour envoyer un signal on utilise la fonction kill(pid, SIGUSER1);

void	char_to_bits(int pid, char c)
{
	int	bit;

	bit = 0;
	while (bit < 8)
	{
		if ((c >> bit & 1) == 1)
			kill(pid, SIGUSR1);
		else
			kill(pid, SIGUSR2);
		usleep(100);
		bit++;
	}
}

dans cette fonction on parcourt chaque bit de notre char d'ou le bit < 8

le if sert a regarder si en decalant de x bit on a un 1 car sinan c un 0 et on s'en balec des 0

du coup si c un 1 on kill vers SIGUSR1 sinan SIGUSR2, le usleep sert a pas envoyer trop vite car sinan il peut afficher dans le desordre ou faire de la merde

server : 

on utilise 2 signaux grace a la fonction signal(SIGUSR1 ou SIGUSR2, &fonction), fonction(int sig)

donc on utilise les 2 signaux donc pour SIGUSR1 et SIGUSR2

puis on enchaine sur une boucle 

signal(SIGUSR1, &fonction);
signal(SIGUSR2, &fonction);
while
{
   pause()
}

fonction

on fait deux static int a 0

un c pour le character que l'on va avoir

on fait un if qui dit que si on a recu un signal vers SIGUSR1, donc grace au kill SIGUSR1 si jamais on a un 1

bah on decale de a l'envers de x bit en ajoutant un 1, comme ceci "c = c | (1 << bit)"

et bit qui l'orsqu'il atteind 8 il printf c puis devient 0 avec c etc
si bit n'est pas a 8 juste bit++ 
pas besoin de while car signal vas se faire des qu'il reÃ§oit un signal donc faire une while a pas de sens

voila ta fini minitalk.